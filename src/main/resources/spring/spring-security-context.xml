<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">
   
<global-method-security pre-post-annotations="enabled"/>

    <http use-expressions="true">
      	<intercept-url pattern="/" access="hasRole('ROLE_USER')" />
  		<intercept-url pattern="/users**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/users/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/account/**" access="hasRole('ROLE_USER')" />
        <form-login login-page="/login" 
        			default-target-url="/" 	
        			authentication-failure-url="/login?error" />
        
        <logout logout-url="/logout" logout-success-url="/login?logout" /> <!--  /j_spring_security_logout  -->
    </http>


    <authentication-manager>
        <authentication-provider>
            <password-encoder hash="bcrypt" />
            <jdbc-user-service data-source-ref="dataSource"
                authorities-by-username-query="SELECT user.name, role.name FROM user
                                               JOIN user_role on user.id = user_role.users_id
                                               JOIN role on user_role.roles_id = role.id
                                               WHERE user.name = ?"
                users-by-username-query="SELECT name,password,status FROM user WHERE name = ?"/>        
        </authentication-provider>
    </authentication-manager>

</beans:beans>